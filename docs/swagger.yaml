definitions:
  authDomain.RequestLogin:
    properties:
      password:
        maxLength: 100
        type: string
      username:
        maxLength: 100
        type: string
    required:
    - password
    - username
    type: object
  authDomain.RequestRegister:
    properties:
      name:
        maxLength: 100
        type: string
      password:
        maxLength: 100
        minLength: 8
        type: string
      username:
        maxLength: 100
        type: string
    required:
    - name
    - password
    - username
    type: object
  authDomain.RequestToken:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  authDomain.ResponseRefreshToken:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  authDomain.ResponseRegister:
    properties:
      name:
        type: string
      username:
        type: string
    type: object
  ernos.Ernos:
    properties:
      attribute: {}
      code:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  response.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/ernos.Ernos'
    type: object
  response.SuccesResponse:
    properties:
      item: {}
      items:
        items: {}
        type: array
      message:
        type: string
      total:
        type: integer
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register request
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/authDomain.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authDomain.ResponseRefreshToken'
        "401":
          description: Username or password is incorect
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Form validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Login
      tags:
      - Auth
  /auth/logout:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccesResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Logout
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register request
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/authDomain.RequestRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authDomain.ResponseRegister'
        "409":
          description: Duplicate record
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Form validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Register
      tags:
      - Auth
  /auth/token/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register request
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/authDomain.RequestToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/authDomain.ResponseRefreshToken'
        "401":
          description: Username or password is incorect
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "422":
          description: Form validation error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Get Refresh Token
      tags:
      - Auth
swagger: "2.0"
