// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/google/wire"
	"github.com/hifat/sodium-api/internal/adapter"
	"github.com/hifat/sodium-api/internal/handler"
	"github.com/hifat/sodium-api/internal/handler/authHandler"
	"github.com/hifat/sodium-api/internal/middleware"
	"github.com/hifat/sodium-api/internal/repository"
	"github.com/hifat/sodium-api/internal/repository/authRepo"
	"github.com/hifat/sodium-api/internal/repository/userRepo"
	"github.com/hifat/sodium-api/internal/service/authService"
	"github.com/hifat/sodium-api/internal/service/middlewareService"
)

// Injectors from wire.go:

func InitializeAPI() (adapter.Adapter, func()) {
	db, cleanup := repository.NewGormDB()
	authRepository := authRepo.NewAuthRepository(db)
	authMiddlewareService := middlewareService.NewAuthMiddlewareService(authRepository)
	authMiddleware := middleware.NewAuthMiddleware(authMiddlewareService)
	middlewareMiddleware := middleware.NewMiddleware(authMiddleware)
	userRepository := userRepo.NewUserRepository(db)
	authDomainAuthService := authService.NewAuthService(authRepository, userRepository)
	authHandlerAuthHandler := authHandler.NewAuthHandler(authDomainAuthService)
	handlerHandler := handler.NewHandler(authHandlerAuthHandler)
	adapterAdapter := adapter.NewAdapter(middlewareMiddleware, handlerHandler)
	return adapterAdapter, func() {
		cleanup()
	}
}

// wire.go:

var AdapterSet = wire.NewSet(adapter.AdapterSet)

var MiddlewareSet = wire.NewSet(middleware.MiddlewareSet, middleware.AuthMiddlewareSet)

var RepoSet = wire.NewSet(repository.GormDBSet, authRepo.AuthRepoSet, userRepo.UserRepoSet)

var ServiceSet = wire.NewSet(authService.AuthServiceSet, middlewareService.AuthMiddlewareServiceSet)

var HandlerSet = wire.NewSet(authHandler.AuthHandlerSet, handler.HandlerSet)
